openapi: 3.1.0
info:
  version: 1.0.0
  title: Hamal Api Title
  description: Hamal API description
  termsOfService: https://hamal.io/terms/
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://hamal.io
security:
  - JWT: [ ]
tags:
  - name: Blueprint
    description: Endpoints to manage Blueprint Actions using the REST API.
  - name: Func
    description: To come
paths:
  /v1/groups/{groupId}/blueprints:
    post:
      description: Create a blueprint
      summary: Create a blueprint
      tags:
        - Blueprint
      operationId: blueprint/create
      parameters:
        - $ref: '#/components/parameters/group_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blueprint_create_req'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blueprint_create_res'
        '400':
          description: Bad Request
      x-codeSamples:
        - lang: cUrl
          label: curl
          source: |
            curl --request POST \
             --url 'https://hamal.io/v1/groups/1/blueprints' \
             --header 'content-type: application/octet-stream: ' \
             --data '{
              "name" : "MyBlueprint",
              "inputs" : {},
              "value" : "print('hamal')"
             }'
        - lang: Lua
          label: hamal
          source: |-
            sys = require('sys')
            blueprint = sys.blueprint.create({
                name = 'test-blueprint',
                inputs = {},
                value = [[40 + 2]]
            })
  /v1/blueprints/{blueprint_id}:
    get:
      description: Get a blueprint
      summary: Get a blueprint
      tags:
        - Blueprint
      operationId: blueprint/get
      parameters:
        - $ref: '#/components/parameters/blueprint_id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blueprint_get_res'
        '404':
          description: Blueprint not found
      x-codeSamples:
        - lang: cURL
          label: curl
          source: curl --update
        - lang: Lua
          label: hamal
          source: |-
            sys = require('sys')
            sys.blueprint.get(create_req.id)
    patch:
      description: Update a blueprint
      summary: Update an blueprint
      tags:
        - Blueprint
      operationId: blueprint/update
      parameters:
        - $ref: '#/components/parameters/blueprint_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/blueprint_update_req'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/blueprint_update_res'
        '404':
          description: Blueprint not found
      x-codeSamples:
        - lang: cURL
          label: curl
          source: curl --update
        - lang: Lua
          label: hamal
          source: |-
            sys = require('sys')
            sys.blueprint.update({
                id = blueprint.id,
            })
components:
  securitySchemes:
    JWT:
      description: TODO!
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    group_id:
      type: integer
      example: 1
      description: Group Id
    custom_name:
      type: string
      example: MyName
    blueprint_inputs:
      type: object
      description: Under construction
    code_value:
      type: string
      example: print('hamal')
      description: Code Value
    blueprint_create_req:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/custom_name'
        inputs:
          $ref: '#/components/schemas/blueprint_inputs'
        value:
          $ref: '#/components/schemas/code_value'
      description: Response to a create blueprint request.
    req_id:
      type: string
      example: da6ea0a001000
      description: Request Id
    blueprint_id:
      type: string
      example: da6ea0a001000
      description: Blueprint Id
    blueprint_create_res:
      type: object
      properties:
        type:
          type: string
          example: io.hamal.lib.sdk.api.ApiBlueprintCreateSubmitted
        id:
          $ref: '#/components/schemas/req_id'
        status:
          type: string
          example: Submitted
        blueprintId:
          $ref: '#/components/schemas/blueprint_id'
        groupId:
          $ref: '#/components/schemas/group_id'
    blueprint_get_res:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/blueprint_id'
        name:
          $ref: '#/components/schemas/custom_name'
        inputs:
          $ref: '#/components/schemas/blueprint_inputs'
        value:
          $ref: '#/components/schemas/code_value'
    blueprint_update_req:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/custom_name'
        inputs:
          $ref: '#/components/schemas/blueprint_inputs'
        value:
          $ref: '#/components/schemas/code_value'
    blueprint_update_res:
      type: object
      properties:
        name:
          $ref: '#/components/schemas/custom_name'
        inputs:
          $ref: '#/components/schemas/blueprint_inputs'
        value:
          $ref: '#/components/schemas/code_value'
  parameters:
    group_id:
      name: groupId
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/group_id'
      style: simple
      example: 1
    blueprint_id:
      name: blueprint_id
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/blueprint_id'
      style: simple
      example: da6ea0a001000
